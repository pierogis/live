---
import { ViewTransitions } from "astro:transitions";
import { getImage } from "astro:assets";
import { SEO } from "astro-seo";

import { Interactable } from "@pierogis/utensils";
import { themeKey, Theme } from "@pierogis/utensils/theme";

import { Layout } from "ui";

import fallbackOpenGraphImageSrc from "../images/og.png";
import fallbackTwitterImageSrc from "../images/twitter.png";
import faviconSrc from "../images/favicon.png";
import faviconSvgSrc from "../images/favicon.svg";
import ThemeComponent from "../components/Theme.svelte";

interface Props {
  title: string;
  description: string;
  type?: string;
  og?: {
    image: string;
    alt: string;
  };
  twitter?: {
    card: "summary" | "summary_large_image";
    image: string;
    alt: string;
    handle?: string;
  };
}

const ogImage = await getImage({
  src: fallbackOpenGraphImageSrc,
});
const twitterImage = await getImage({
  src: fallbackTwitterImageSrc,
});

const {
  title,
  description,
  type = "website",
  og = {
    image: ogImage.src,
    alt: "stale",
  },
  twitter = {
    card: "summary",
    image: twitterImage.src,
    alt: "stale",
  },
} = Astro.props;

const appleTouchIcon = await getImage({
  src: faviconSrc,
  width: 180,
  height: 180,
  format: "png",
});
const faviconSvg = await getImage({ src: faviconSvgSrc, format: "svg" });
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="/favicon.ico" sizes="32x32" />
    <link rel="icon" href={faviconSvg.src} type="image/svg+xml" />
    <link rel="apple-touch-icon" href={appleTouchIcon.src} />
    <link rel="manifest" href="/manifest.json" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions />
    <script
      is:inline
      transition:persist
      define:vars={{ themeKey, dark: Theme.Dark, light: Theme.Dark }}
    >
      function setTheme(document) {
        let theme = (() => {
          if (
            typeof localStorage !== "undefined" &&
            localStorage.getItem(themeKey)
          ) {
            return localStorage.getItem(themeKey);
          }
          if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
            return dark;
          }
          return light;
        })();
        document.documentElement.dataset.theme = theme;
      }

      setTheme(document);

      document.addEventListener("astro:before-swap", (ev) => {
        ev.newDocument.documentElement.dataset.theme =
          document.documentElement.dataset.theme;
      });
    </script>
  </head>
  <SEO
    title={title}
    description={description}
    openGraph={{
      basic: {
        title: title,
        type: type,
        image: og.image,
      },
      image: {
        url: og.image,
        alt: og.alt,
      },
    }}
    twitter={{
      title: title,
      description: description,
      card: "summary_large_image",
      site: "@pierogis_live",
      creator: twitter?.handle ? "@" + twitter.handle : undefined,
      image: twitter.image,
      imageAlt: twitter.alt,
    }}
  />
  <body>
    <div>
      <Layout
        title="stale"
        github="https://github.com/pierogis/live/tree/main/sites/stale"
      >
        <nav slot="nav">
          <Interactable>
            <a href="/tags" class="link-box border inset">tags</a>
          </Interactable>

          <Interactable>
            <a href="/about" class="border inset link-box">about</a>
          </Interactable>

          <Interactable>
            <a href="/newsletter" class="border inset link-box">newsletter</a>
          </Interactable>
        </nav>

        <slot />

        <ThemeComponent slot="theme" client:load />
      </Layout>
    </div>
  </body>
</html>
