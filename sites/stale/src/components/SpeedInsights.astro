---
import type { SpeedInsightsProps } from "@vercel/speed-insights";
type Props = Omit<SpeedInsightsProps, "framework" | "beforeSend">;

// beforeSend?
const propsStr = JSON.stringify(Astro.props);
const paramsStr = JSON.stringify(Astro.params);
---

<vercel-speed-insights
  data-props={propsStr}
  data-params={paramsStr}
  data-pathname={Astro.url.pathname}></vercel-speed-insights>

<script>
  import { injectSpeedInsights, computeRoute } from "@vercel/speed-insights";

  customElements.define(
    "vercel-speed-insights",
    class VercelSpeedInsights extends HTMLElement {
      constructor() {
        super();
        try {
          const props = JSON.parse(this.dataset.props ?? "{}");
          const params = JSON.parse(this.dataset.params ?? "{}");
          const route = computeRoute(this.dataset.pathname ?? "", params);
          injectSpeedInsights({
            route,
            ...props,
            framework: "astro",
            // @ts-ignore
            beforeSend: window.speedInsightsBeforeSend ?? undefined,
          });
        } catch (err) {
          throw new Error(`Failed to parse SpeedInsights properties: ${err}`);
        }
      }
    }
  );
</script>
